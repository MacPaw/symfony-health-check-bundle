name: CI

on:
    pull_request:
    push:
        branches: [ master, develop ]

jobs:
    run:
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: false
            matrix:
                php:
                    - '7.4'
                    - '8.0'
                    - '8.1'
                coverage: ['none']
                symfony-versions:
                    - '3.4.*'
                    - '4.4.*'
                    - '5.1.*'
                    - '5.2.*'
                    - '5.3.*'
                    - '5.4.*'
                    - '6.0.*'
                include:
                    - description: 'Log Code Coverage'
                      php: '8.1'
                      coverage: 'xdebug'
                      symfony-versions: '^5.2'

        name: PHP ${{ matrix.php }} Symfony ${{ matrix.symfony-versions }} ${{ matrix.description }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - uses: actions/cache@v2
              with:
                  path: ~/.composer/cache/files
                  key: ${{ matrix.php }}-${{ matrix.symfony-versions }}

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: ${{ matrix.coverage }}

            - name: Add PHPUnit matcher
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: Set composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer
              uses: actions/cache@v2.1.2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-${{ matrix.php }}-${{ matrix.symfony-versions }}-composer-${{ hashFiles('composer.json') }}
                  restore-keys: ${{ runner.os }}-${{ matrix.php }}-${{ matrix.symfony-versions }}-composer

            - name: Update Symfony version
              if: matrix.symfony-versions != ''
              run: |
                  composer require symfony/framework-bundle:${{ matrix.symfony-versions }} --no-update --no-scripts

                  composer require --dev symfony/yaml:${{ matrix.symfony-versions }} --no-update --no-scripts
                  composer require --dev symfony/browser-kit:${{ matrix.symfony-versions }} --no-update --no-scripts

            - name: Install dependencies
              run: composer install

            - name: Run PHPUnit tests
              run: vendor/bin/simple-phpunit
              if: matrix.coverage == 'none'

            - name: PHPUnit tests and Log Code coverage
              run: vendor/bin/simple-phpunit --coverage-clover=coverage.xml
              if: matrix.coverage == 'xdebug'

            - name: Run codecov
              uses: codecov/codecov-action@v1
              if: matrix.coverage == 'xdebug'
              with:
                  file: './coverage.xml'
                  fail_ci_if_error: true
